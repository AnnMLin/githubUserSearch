{"version":3,"sources":["store/actions/search.js","store/actions/index.js","store/reducers/users.js","store/reducers/urls.js","store/reducers/totalCount.js","store/reducers/keyword.js","store/reducers/page.js","store/reducers/pagination.js","store/reducers/index.js","store/index.js","components/Home.js","components/SearchBar.js","components/Results.js","components/Main.js","components/PageNav.js","app.js","serviceWorker.js","index.js"],"names":["gotUsers","users","type","gotUrls","urls","config","headers","localStorage","window","actionTypes","actions","searchUsers","keyword","APIPage","dispatch","urlsLS","getItem","JSON","parse","Promise","all","axios","get","then","data","totalCount","gotTotalCount","userUrls","items","map","userObj","url","console","log","catch","err","error","fetchUsers","num","getState","startPage","startIdx","Math","floor","pagination","usersLS","paginatedUrls","slice","name","avatarUrl","avatar_url","email","login","location","repos","public_repos","followers","bio","html_url","gotKeyword","clearUsers","gotPage","page","clearTotalCount","initialState","reducer","state","action","combineReducers","store","createStore","applyMiddleware","thunk","Home","id","SearchBar","useState","setKeyword","history","useHistory","className","onSubmit","e","preventDefault","push","placeholder","onChange","target","value","required","Results","useParams","keywordOnFile","useSelector","pageOnFile","useDispatch","useEffect","clear","length","href","key","src","alt","Main","PageNav","pages","i","handlePreviousGroup","setItem","stringify","handleNextGroup","handleGoToPage","onClick","Number","fontWeight","App","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.043fd8cf.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const GOT_USERS = 'GOT_USERS'\nexport const GOT_URLS = 'GOT_URLS'\nexport const GOT_TOTAL_COUNT = 'GOT_TOTAL_COUNT'\nexport const GOT_KEYWORD = 'GOT_KEYWORD'\nexport const CLEAR_USERS = 'CLEAR_USERS'\nexport const GOT_PAGE = 'GOT_PAGE'\nexport const CLEAR_TOTAL_COUNT = 'CLEAR_TOTAL_COUNT'\nexport const GOT_PAGINATION = 'GOT_PAGINATION'\n\n// action creator\nconst gotUsers = users => ({type: GOT_USERS, users})\nconst gotUrls = urls => ({type: GOT_URLS, urls})\nconst gotTotalCount = totalCount => ({type: GOT_TOTAL_COUNT, totalCount})\nexport const gotKeyword = keyword => ({type: GOT_KEYWORD, keyword})\nexport const clearUsers = () => ({type: CLEAR_USERS})\nexport const gotPage = page => ({type: GOT_PAGE, page})\nexport const clearTotalCount = () => ({type: CLEAR_TOTAL_COUNT})\nconst gotPagination = pagination => ({type: GOT_PAGINATION, pagination})\n\nconst config = {\n  headers: {\n    'Authorization' : 'token '+ process.env.REACT_APP_PUBLIC_ACCESS_ONLY_PAT\n  }\n}\n\nconst localStorage = window.localStorage\n\n// thunk creator\nexport const searchUsers = (keyword, APIPage) => dispatch => {\n\n  // if urls can be found in localStorage, load it from localStorage then dispatch to store\n  const urlsLS = localStorage.getItem(`API${APIPage}`)\n  if(urlsLS) {\n    const urls = JSON.parse(urlsLS)\n    const fakePromise = () => dispatch(gotUrls(urls))\n    return Promise.all([fakePromise])\n  }\n  \n  return axios.get(`https://api.github.com/search/users?q=${keyword}&page=${APIPage}&per_page=100`, config)\n    .then(({data}) => {\n      const totalCount = data['total_count']\n      dispatch(gotTotalCount(totalCount))\n      const userUrls = data.items.map(userObj => userObj.url) //array of user objects\n      console.log(userUrls)\n      dispatch(gotUrls(userUrls))\n    })\n    .catch(err => {\n      console.error(err)\n    })\n}\n\nexport const fetchUsers = num => (dispatch, getState) => {\n  console.log('IN FETCH USERS', num)\n\n  const userPerPage = 10\n  const startIdx = (num-1)*userPerPage\n  let startPage\n  if(num%userPerPage === 0) {\n    startPage = num - userPerPage + 1\n  } else {\n    startPage = Math.floor(num/userPerPage)*10 + 1\n  }\n  dispatch(gotPagination([startPage, startPage+userPerPage-1]))\n  console.log(`PAGINATION: [${startPage}, ${startPage+userPerPage-1}]`)\n\n  // if page can be found in localStorage, load it from localStorage then dispatch to store\n  const usersLS = localStorage.getItem(num+'')\n  if(usersLS) {\n    const users = JSON.parse(usersLS)\n    return dispatch(gotUsers(users))\n  }\n\n  const { urls } = getState()\n  const paginatedUrls = urls.slice(startIdx%100, startIdx%100===90? 100 : (startIdx+userPerPage)%100)\n\n  return Promise.all(paginatedUrls.map(url => axios.get(url, config)))\n    .then(data => (\n      data.map(({data}) => {\n        const {name, avatar_url, email, login, location, public_repos, followers, bio, html_url} = data\n        return {\n          name,\n          avatarUrl : avatar_url,\n          email,\n          login,\n          location,\n          repos: public_repos,\n          followers,\n          bio,\n          url: html_url\n        }\n      })\n    ))\n    .then(users => {\n      dispatch(gotUsers(users))\n    })\n    .catch(err => {\n      console.error(err)\n    })\n}","import { GOT_USERS, GOT_URLS, GOT_TOTAL_COUNT, GOT_KEYWORD, CLEAR_USERS, GOT_PAGE, CLEAR_TOTAL_COUNT, GOT_PAGINATION, gotKeyword, searchUsers, fetchUsers, clearUsers, gotPage, clearTotalCount } from './search'\n\nconst actions = {\n  searchUsers,\n  fetchUsers,\n  gotKeyword,\n  clearUsers,\n  gotPage,\n  clearTotalCount\n}\n\nexport const actionTypes = {\n  GOT_USERS,\n  GOT_URLS,\n  GOT_TOTAL_COUNT,\n  GOT_KEYWORD,\n  CLEAR_USERS,\n  GOT_PAGE,\n  CLEAR_TOTAL_COUNT,\n  GOT_PAGINATION\n}\n\nexport default actions","import { actionTypes } from '../actions'\n\nconst initialState = []\n/*\n[{\n  name: (text) or null,\n  login: (text),\n  email: (text) or null,\n  location: (text) or null,\n  repos: (number),\n  followers : (number),\n  desc: (text) or null\n}]\n*/\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.GOT_USERS:\n      return action.users\n    case actionTypes.CLEAR_USERS:\n      return []\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { actionTypes } from '../actions'\n\nconst initialState = []\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.GOT_URLS:\n      return action.urls\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { actionTypes } from '../actions'\n\nconst initialState = 0\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.GOT_TOTAL_COUNT:\n      return action.totalCount\n    case actionTypes.CLEAR_TOTAL_COUNT:\n      return 0\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { actionTypes } from '../actions'\n\nconst initialState = ''\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.GOT_KEYWORD:\n      return action.keyword\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { actionTypes } from '../actions'\n\nconst initialState = 0\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.GOT_PAGE:\n      return action.page\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { actionTypes } from '../actions'\n\nconst initialState = []\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.GOT_PAGINATION:\n      return action.pagination\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { combineReducers } from 'redux'\nimport users from './users'\nimport urls from './urls'\nimport totalCount from './totalCount'\nimport keyword from './keyword'\nimport page from './page'\nimport pagination from './pagination'\n\nconst reducer = combineReducers({\n  users,\n  urls,\n  totalCount,\n  keyword,\n  page,\n  pagination\n})\n\nexport default reducer","import { createStore, applyMiddleware } from 'redux'\nimport reducer from './reducers'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react'\nimport { SearchBar } from '../components'\n\nconst Home = () => {\n\n  return (\n    <div id='home'>\n      <SearchBar />\n    </div>\n  )\n}\n\nexport default Home","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst SearchBar = () => {\n\n  const [keyword, setKeyword] = useState('')\n\n  const history = useHistory()\n\n  const handleChange = e => {\n    setKeyword(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    history.push(`/search/${keyword}/1`)\n  }\n\n  return(\n    <div>\n      <form className='search-bar' onSubmit={handleSubmit}>\n        <div>\n          <input className='keyword' type='text' placeholder='Search Github users ...' name='keyword' onChange={handleChange} required/>\n        </div>        \n        <input className='submit' type='submit' value='Search'/>\n      </form>\n    </div>\n  )\n}\n\nexport default SearchBar","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport actions from '../store/actions'\nimport { PageNav } from '.'\n\n\nconst Results = () => {\n\n  const { page, keyword } = useParams()\n\n  const keywordOnFile = useSelector(state => state.keyword)\n  console.log('KEYWORD_STORE:', keywordOnFile)\n  const pageOnFile = useSelector(state => state.page)\n  console.log('PAGE_STORE:', pageOnFile)\n  const users = useSelector(state => state.users)\n  console.log('USERS', users)\n  const totalCount = useSelector(state => state.totalCount)\n  const pagination = useSelector(state => state.pagination)\n\n  const dispatch = useDispatch()\n\n  const APIPage = Math.floor((page-1)/10) + 1\n\n  const localStorage = window.localStorage\n\n  useEffect(() => {\n    if(keyword !== keywordOnFile) {\n\n      localStorage.clear()\n      dispatch(actions.clearTotalCount())\n      dispatch(actions.clearUsers())\n\n      dispatch(actions.gotKeyword(keyword))\n      dispatch(actions.gotPage(page))\n      dispatch(actions.searchUsers(keyword, APIPage))\n        .then(() => dispatch(actions.fetchUsers(page)))\n    }\n    else if(page !== pageOnFile) {\n      \n      dispatch(actions.clearUsers())\n\n      dispatch(actions.gotPage(page))\n      if(page<=pagination[1] && page>=pagination[0]) {\n        dispatch(actions.fetchUsers(page))\n      }\n      else {\n        dispatch(actions.searchUsers(keyword, APIPage))\n          .then(() => {\n            console.log('WAS I HERE?')\n            dispatch(actions.fetchUsers(page))\n          })\n      }\n    }\n  }, [keyword, page])\n\n\n  return(\n    <div id='results'>\n      {totalCount > 0?\n      <div className='total-count'>{totalCount} users</div> : null\n      }\n      {users.length ? \n      users.map(({avatarUrl, name, login, email, location, repos, followers, bio, url}) => (\n        <a target='_blank' href={url} key={login}>\n          <div className='user-container'>\n            <div className='inner-container'>\n              <div className='info-left'>\n                <img className='user-avatar' src={avatarUrl} alt='user-avatar' />\n              </div>\n              <div className='info-right'>\n                {name? <div className='user-name'>{name}</div> : null}\n                <div className='login'>{login}</div>\n                {email? <div className='email'>{email}</div> : null}\n                {location? <div className='loc'>{location}</div> : null}\n                <div className='repo'>{repos} repos</div>\n                <div className='followers'>{followers} followers</div>\n                {bio?<div className='user-bio'>{bio}</div> : null}\n              </div>\n              <div className='fade-out'></div>\n            </div>\n          </div>\n        </a>\n      ))\n      : <div className='loading'>LOADING...</div> }\n      {users.length ? <PageNav /> : null}\n    </div>\n  )\n}\n\nexport default Results","import React from 'react'\nimport { SearchBar, Results } from '.';\n\nconst Main = () => {\n\n  return(\n    <div id='main'>\n      <SearchBar />\n      <Results />\n    </div>\n  )\n}\n\nexport default Main","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nconst PageNav = () => {\n  \n  const page = useSelector(state => state.page)\n  const pagination = useSelector(state => state.pagination)\n  const users = useSelector(state => state.users)\n  const urls = useSelector(state => state.urls)\n\n  const { keyword } = useParams()\n  const history = useHistory()\n\n  const pages = []\n\n  for(let i = pagination[0]; i <= pagination[1]; i++) {\n    pages.push(i)\n  }\n\n  const localStorage = window.localStorage\n  const APIPage = Math.floor((page-1)/10) + 1\n\n  const handlePreviousGroup = () => {\n    localStorage.setItem(page, JSON.stringify(users))\n    localStorage.setItem(`API${APIPage}`, JSON.stringify(urls))\n    history.push(`/search/${keyword}/${pagination[1]-10}`)\n  }\n\n  const handleNextGroup = () => {\n    localStorage.setItem(page, JSON.stringify(users))\n    localStorage.setItem(`API${APIPage}`, JSON.stringify(urls))\n    history.push(`/search/${keyword}/${pagination[0]+10}`)\n  }\n\n  const handleBack = () => {\n    localStorage.setItem(page, JSON.stringify(users))\n    if(page%10 === 1) handlePreviousGroup()\n    else handleGoToPage(Number(page)-1)\n  }\n\n  const handleNext = () => {\n    localStorage.setItem(page, JSON.stringify(users))\n    if(page%10 === 0) handleNextGroup()\n    else handleGoToPage(Number(page)+1)\n  }\n\n  const handleGoToPage = target => {\n    localStorage.setItem(page, JSON.stringify(users))\n    history.push(`/search/${keyword}/${target}`)\n  }\n\n  return(\n    <div className='page-nav'>\n      {pagination[0] === 1 ? null : <div onClick={handlePreviousGroup}>{'<<'}</div>}\n      {page === '1' ? null : <div onClick={handleBack}>{'<'}</div>}\n      {pages.map(num => {\n        let fontWeight = 'none'\n        if(num == page) fontWeight = 'bold'\n        return(\n          <div key={num} className={fontWeight} onClick={()=>handleGoToPage(num)}>{num}</div>\n        )\n      })}\n      {page === '100' ? null : <div onClick={handleNext}>></div>}\n      {pagination[1] === 100 ? null : <div onClick={handleNextGroup}>>></div>}\n    </div>\n  )\n}\n\nexport default PageNav","import React from 'react'\nimport { Home, Main } from './components'\nimport { Switch, Route } from 'react-router-dom'\n\n\nconst App = () => {\n\n  return(\n    <div>\n      <Switch>\n        <Route path='/search/:keyword/:page' component={Main} />\n        <Route path='/' component={Home} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n  ,document.getElementById('root')\n)"],"sourceRoot":""}